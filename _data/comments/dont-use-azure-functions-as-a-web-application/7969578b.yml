id: 7a67a5ef
date: 2021-04-12T05:24:13.4786602Z
name: 'Christian '
email: 
avatar: https://secure.gravatar.com/avatar/ac0224ba07817f7119e2fd12bf89e195?s=80&r=pg
url: 
message: "Agree and disagree. Let me explain. Mostly you should at every level choose to do server less functions. What server less functions are not good at inherently are providing the actual core code base especially in the .net core framework.\r\n\r\nJavascript can employ this issue as well. For example\r\nWhen doing an http trigger you have only access to the functions https class. So many times things you're used to doing in express or net core natively you're limited to that class. \r\n\r\nAgain, if you want to protect a route and authorize a route you're going find that you become stuck in ways that won't allow you to just install a package or library and use it like a native server code base. \r\n\r\nYou're not going to have an in depth controller system in a function. \r\n\r\nAlso memory cache and state is not really available in a function but signalr and redis are available to you. So... There's usually a way. \r\n\r\nRemeber though, It's gotta be done the functions way and additions thereafter. \r\nBut most of the time it's ok and you still can do most of what you need accomplished. \r\n\r\nSo for more complicated and custom code bases I agree it's not maybe the path you want. \r\n\r\nHowever, if you can do it in a function you should do it in a function. \r\n\r\nFunction first design. \r\n\r\nGo from there. You'll be surprised. And cold starts aren't an issue you can have full time server functions. \r\n\r\n"
